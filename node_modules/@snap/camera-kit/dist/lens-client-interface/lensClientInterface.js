import { __awaiter } from "tslib";
import { lensImagePickerError } from "../namedErrors";
import { Injectable } from "../dependency-injection/Injectable";
import { getLogger } from "../logger/logger";
import { lensCoreFactory } from "../lens-core-module/loader/lensCoreFactory";
import { pickClientImage } from "./imagePicker";
const logger = getLogger("lensClientInterface");
export const registerLensClientInterfaceHandler = Injectable("registerLensClientInterfaceHandler", [lensCoreFactory.token], (lensCore) => {
    if (!lensCore.setClientInterfaceRequestHandler) {
        logger.warn("Current LensCore version doesn't support lens client interface requests");
        return;
    }
    lensCore.setClientInterfaceRequestHandler(({ data, interfaceControl, interfaceAction }) => __awaiter(void 0, void 0, void 0, function* () {
        if (interfaceControl === lensCore.InterfaceControl.ImagePicker &&
            interfaceAction === lensCore.InterfaceAction.Show) {
            yield pickClientImage(data, lensCore).catch((error) => {
                logger.error(lensImagePickerError("Error occurred while attempting to select an image file for the lens request.", error));
            });
        }
    }));
});
//# sourceMappingURL=lensClientInterface.js.map