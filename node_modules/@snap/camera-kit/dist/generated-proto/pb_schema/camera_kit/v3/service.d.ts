import _m0 from "protobufjs/minimal";
import { RankingData } from "./ranking";
import { Lens } from "./lens";
import { LegalPrompt } from "./legal_prompt";
import { OperationalMetricsBundle } from "./operational_metrics";
import { Any } from "../../google/protobuf/any";
import { ExtensionEventBase } from "./business_events";
export declare const protobufPackage = "com.snap.camerakit.v3";
export interface GetGroupRequest {
    id: string;
    rankingData: RankingData | undefined;
}
export interface GetGroupResponse {
    id: string;
    lenses: Lens[];
}
export interface GetGroupLensRequest {
    lensId: string;
    groupId: string;
}
export interface GetGroupLensResponse {
    lens: Lens | undefined;
    groupId: string;
}
export interface BatchGetGroupLensRequest {
    getRequests: GetGroupLensRequest[];
}
export interface BatchGetGroupLensResponse {
    getResponses: GetGroupLensResponse[];
}
export interface GetPlaceholderConfigRequest {
}
export interface GetPlaceholderConfigResponse {
    configs: {
        [key: string]: string;
    };
}
export interface GetPlaceholderConfigResponse_ConfigsEntry {
    key: string;
    value: string;
}
export interface GetInitializationConfigRequest {
}
export interface GetInitializationConfigResponse {
    appVendorUuidOptIn: boolean;
    watermarkEnabled: boolean;
    childrenProtectionActRestricted: boolean;
    legalPrompt: LegalPrompt | undefined;
}
export interface SetOperationalMetricsRequest {
    metrics: OperationalMetricsBundle | undefined;
}
export interface SetOperationalMetricsResponse {
}
export interface SetBusinessEventsRequest {
    batchEvents: Any | undefined;
}
export interface SetBusinessEventsResponse {
}
export interface SetExtensionBusinessEventsRequest {
    events: Any[];
    extensionEventBase: ExtensionEventBase | undefined;
}
export interface SetExtensionBusinessEventsResponse {
}
export declare const GetGroupRequest: {
    encode(message: GetGroupRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupRequest;
    fromPartial<I extends {
        id?: string | undefined;
        rankingData?: {
            sessionId?: string | undefined;
            locale?: string | undefined;
            osType?: import("./ranking").RankingData_OSType | undefined;
            connectivityType?: import("./ranking").RankingData_ConnectivityType | undefined;
        } | undefined;
    } & {
        id?: string | undefined;
        rankingData?: ({
            sessionId?: string | undefined;
            locale?: string | undefined;
            osType?: import("./ranking").RankingData_OSType | undefined;
            connectivityType?: import("./ranking").RankingData_ConnectivityType | undefined;
        } & {
            sessionId?: string | undefined;
            locale?: string | undefined;
            osType?: import("./ranking").RankingData_OSType | undefined;
            connectivityType?: import("./ranking").RankingData_ConnectivityType | undefined;
        } & Record<Exclude<keyof I["rankingData"], keyof RankingData>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupRequest>, never>>(object: I): GetGroupRequest;
};
export declare const GetGroupResponse: {
    encode(message: GetGroupResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupResponse;
    fromPartial<I extends {
        id?: string | undefined;
        lenses?: {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
            scannable?: {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        id?: string | undefined;
        lenses?: ({
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
            scannable?: {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } | undefined;
        }[] & ({
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
            scannable?: {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["vendorData"], string | number>, never>) | undefined;
            content?: ({
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } & {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: ({
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } & {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } & Record<Exclude<keyof I["lenses"][number]["content"]["preview"], keyof import("./lens").Preview>, never>) | undefined;
                assetManifest?: ({
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] & ({
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                } & {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                } & Record<Exclude<keyof I["lenses"][number]["content"]["assetManifest"][number], keyof import("./lens").LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I["lenses"][number]["content"]["assetManifest"], keyof {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[]>, never>) | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: ({
                    [x: string]: string | undefined;
                } & {
                    [x: string]: string | undefined;
                } & Record<Exclude<keyof I["lenses"][number]["content"]["hintTranslations"], string | number>, never>) | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["content"], keyof import("./lens").Content>, never>) | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["featureMetadata"][number], keyof Any>, never>)[] & Record<Exclude<keyof I["lenses"][number]["featureMetadata"], keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>, never>) | undefined;
            lensCreator?: ({
                displayName?: string | undefined;
            } & {
                displayName?: string | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["lensCreator"], "displayName">, never>) | undefined;
            scannable?: ({
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } & {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } & Record<Exclude<keyof I["lenses"][number]["scannable"], keyof import("./lens").Scannable>, never>) | undefined;
        } & Record<Exclude<keyof I["lenses"][number], keyof Lens>, never>)[] & Record<Exclude<keyof I["lenses"], keyof {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
            scannable?: {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupResponse>, never>>(object: I): GetGroupResponse;
};
export declare const GetGroupLensRequest: {
    encode(message: GetGroupLensRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupLensRequest;
    fromPartial<I extends {
        lensId?: string | undefined;
        groupId?: string | undefined;
    } & {
        lensId?: string | undefined;
        groupId?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupLensRequest>, never>>(object: I): GetGroupLensRequest;
};
export declare const GetGroupLensResponse: {
    encode(message: GetGroupLensResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupLensResponse;
    fromPartial<I extends {
        lens?: {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
            scannable?: {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } | undefined;
        } | undefined;
        groupId?: string | undefined;
    } & {
        lens?: ({
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: {
                [x: string]: string | undefined;
            } | undefined;
            content?: {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] | undefined;
            lensCreator?: {
                displayName?: string | undefined;
            } | undefined;
            scannable?: {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } | undefined;
        } & {
            id?: string | undefined;
            name?: string | undefined;
            vendorData?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & Record<Exclude<keyof I["lens"]["vendorData"], string | number>, never>) | undefined;
            content?: ({
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } | undefined;
                assetManifest?: {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: {
                    [x: string]: string | undefined;
                } | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } & {
                lnsUrl?: string | undefined;
                lnsSha256?: string | undefined;
                iconUrl?: string | undefined;
                preview?: ({
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } & {
                    imageUrl?: string | undefined;
                    imageSequenceSize?: number | undefined;
                    imageSequenceWebpUrlPattern?: string | undefined;
                } & Record<Exclude<keyof I["lens"]["content"]["preview"], keyof import("./lens").Preview>, never>) | undefined;
                assetManifest?: ({
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[] & ({
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                } & {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                } & Record<Exclude<keyof I["lens"]["content"]["assetManifest"][number], keyof import("./lens").LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I["lens"]["content"]["assetManifest"], keyof {
                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                    id?: string | undefined;
                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                    assetUrl?: string | undefined;
                    assetChecksum?: string | undefined;
                }[]>, never>) | undefined;
                defaultHintId?: string | undefined;
                hintTranslations?: ({
                    [x: string]: string | undefined;
                } & {
                    [x: string]: string | undefined;
                } & Record<Exclude<keyof I["lens"]["content"]["hintTranslations"], string | number>, never>) | undefined;
                lnsUrlBolt?: string | undefined;
                iconUrlBolt?: string | undefined;
            } & Record<Exclude<keyof I["lens"]["content"], keyof import("./lens").Content>, never>) | undefined;
            isThirdParty?: boolean | undefined;
            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
            featureMetadata?: ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[] & ({
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            } & Record<Exclude<keyof I["lens"]["featureMetadata"][number], keyof Any>, never>)[] & Record<Exclude<keyof I["lens"]["featureMetadata"], keyof {
                typeUrl?: string | undefined;
                value?: Uint8Array | undefined;
            }[]>, never>) | undefined;
            lensCreator?: ({
                displayName?: string | undefined;
            } & {
                displayName?: string | undefined;
            } & Record<Exclude<keyof I["lens"]["lensCreator"], "displayName">, never>) | undefined;
            scannable?: ({
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } & {
                snapcodeImageUrl?: string | undefined;
                snapcodeDeeplink?: string | undefined;
            } & Record<Exclude<keyof I["lens"]["scannable"], keyof import("./lens").Scannable>, never>) | undefined;
        } & Record<Exclude<keyof I["lens"], keyof Lens>, never>) | undefined;
        groupId?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetGroupLensResponse>, never>>(object: I): GetGroupLensResponse;
};
export declare const BatchGetGroupLensRequest: {
    encode(message: BatchGetGroupLensRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): BatchGetGroupLensRequest;
    fromPartial<I extends {
        getRequests?: {
            lensId?: string | undefined;
            groupId?: string | undefined;
        }[] | undefined;
    } & {
        getRequests?: ({
            lensId?: string | undefined;
            groupId?: string | undefined;
        }[] & ({
            lensId?: string | undefined;
            groupId?: string | undefined;
        } & {
            lensId?: string | undefined;
            groupId?: string | undefined;
        } & Record<Exclude<keyof I["getRequests"][number], keyof GetGroupLensRequest>, never>)[] & Record<Exclude<keyof I["getRequests"], keyof {
            lensId?: string | undefined;
            groupId?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "getRequests">, never>>(object: I): BatchGetGroupLensRequest;
};
export declare const BatchGetGroupLensResponse: {
    encode(message: BatchGetGroupLensResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): BatchGetGroupLensResponse;
    fromPartial<I extends {
        getResponses?: {
            lens?: {
                id?: string | undefined;
                name?: string | undefined;
                vendorData?: {
                    [x: string]: string | undefined;
                } | undefined;
                content?: {
                    lnsUrl?: string | undefined;
                    lnsSha256?: string | undefined;
                    iconUrl?: string | undefined;
                    preview?: {
                        imageUrl?: string | undefined;
                        imageSequenceSize?: number | undefined;
                        imageSequenceWebpUrlPattern?: string | undefined;
                    } | undefined;
                    assetManifest?: {
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    }[] | undefined;
                    defaultHintId?: string | undefined;
                    hintTranslations?: {
                        [x: string]: string | undefined;
                    } | undefined;
                    lnsUrlBolt?: string | undefined;
                    iconUrlBolt?: string | undefined;
                } | undefined;
                isThirdParty?: boolean | undefined;
                cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                featureMetadata?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                lensCreator?: {
                    displayName?: string | undefined;
                } | undefined;
                scannable?: {
                    snapcodeImageUrl?: string | undefined;
                    snapcodeDeeplink?: string | undefined;
                } | undefined;
            } | undefined;
            groupId?: string | undefined;
        }[] | undefined;
    } & {
        getResponses?: ({
            lens?: {
                id?: string | undefined;
                name?: string | undefined;
                vendorData?: {
                    [x: string]: string | undefined;
                } | undefined;
                content?: {
                    lnsUrl?: string | undefined;
                    lnsSha256?: string | undefined;
                    iconUrl?: string | undefined;
                    preview?: {
                        imageUrl?: string | undefined;
                        imageSequenceSize?: number | undefined;
                        imageSequenceWebpUrlPattern?: string | undefined;
                    } | undefined;
                    assetManifest?: {
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    }[] | undefined;
                    defaultHintId?: string | undefined;
                    hintTranslations?: {
                        [x: string]: string | undefined;
                    } | undefined;
                    lnsUrlBolt?: string | undefined;
                    iconUrlBolt?: string | undefined;
                } | undefined;
                isThirdParty?: boolean | undefined;
                cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                featureMetadata?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                lensCreator?: {
                    displayName?: string | undefined;
                } | undefined;
                scannable?: {
                    snapcodeImageUrl?: string | undefined;
                    snapcodeDeeplink?: string | undefined;
                } | undefined;
            } | undefined;
            groupId?: string | undefined;
        }[] & ({
            lens?: {
                id?: string | undefined;
                name?: string | undefined;
                vendorData?: {
                    [x: string]: string | undefined;
                } | undefined;
                content?: {
                    lnsUrl?: string | undefined;
                    lnsSha256?: string | undefined;
                    iconUrl?: string | undefined;
                    preview?: {
                        imageUrl?: string | undefined;
                        imageSequenceSize?: number | undefined;
                        imageSequenceWebpUrlPattern?: string | undefined;
                    } | undefined;
                    assetManifest?: {
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    }[] | undefined;
                    defaultHintId?: string | undefined;
                    hintTranslations?: {
                        [x: string]: string | undefined;
                    } | undefined;
                    lnsUrlBolt?: string | undefined;
                    iconUrlBolt?: string | undefined;
                } | undefined;
                isThirdParty?: boolean | undefined;
                cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                featureMetadata?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                lensCreator?: {
                    displayName?: string | undefined;
                } | undefined;
                scannable?: {
                    snapcodeImageUrl?: string | undefined;
                    snapcodeDeeplink?: string | undefined;
                } | undefined;
            } | undefined;
            groupId?: string | undefined;
        } & {
            lens?: ({
                id?: string | undefined;
                name?: string | undefined;
                vendorData?: {
                    [x: string]: string | undefined;
                } | undefined;
                content?: {
                    lnsUrl?: string | undefined;
                    lnsSha256?: string | undefined;
                    iconUrl?: string | undefined;
                    preview?: {
                        imageUrl?: string | undefined;
                        imageSequenceSize?: number | undefined;
                        imageSequenceWebpUrlPattern?: string | undefined;
                    } | undefined;
                    assetManifest?: {
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    }[] | undefined;
                    defaultHintId?: string | undefined;
                    hintTranslations?: {
                        [x: string]: string | undefined;
                    } | undefined;
                    lnsUrlBolt?: string | undefined;
                    iconUrlBolt?: string | undefined;
                } | undefined;
                isThirdParty?: boolean | undefined;
                cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                featureMetadata?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                lensCreator?: {
                    displayName?: string | undefined;
                } | undefined;
                scannable?: {
                    snapcodeImageUrl?: string | undefined;
                    snapcodeDeeplink?: string | undefined;
                } | undefined;
            } & {
                id?: string | undefined;
                name?: string | undefined;
                vendorData?: ({
                    [x: string]: string | undefined;
                } & {
                    [x: string]: string | undefined;
                } & Record<Exclude<keyof I["getResponses"][number]["lens"]["vendorData"], string | number>, never>) | undefined;
                content?: ({
                    lnsUrl?: string | undefined;
                    lnsSha256?: string | undefined;
                    iconUrl?: string | undefined;
                    preview?: {
                        imageUrl?: string | undefined;
                        imageSequenceSize?: number | undefined;
                        imageSequenceWebpUrlPattern?: string | undefined;
                    } | undefined;
                    assetManifest?: {
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    }[] | undefined;
                    defaultHintId?: string | undefined;
                    hintTranslations?: {
                        [x: string]: string | undefined;
                    } | undefined;
                    lnsUrlBolt?: string | undefined;
                    iconUrlBolt?: string | undefined;
                } & {
                    lnsUrl?: string | undefined;
                    lnsSha256?: string | undefined;
                    iconUrl?: string | undefined;
                    preview?: ({
                        imageUrl?: string | undefined;
                        imageSequenceSize?: number | undefined;
                        imageSequenceWebpUrlPattern?: string | undefined;
                    } & {
                        imageUrl?: string | undefined;
                        imageSequenceSize?: number | undefined;
                        imageSequenceWebpUrlPattern?: string | undefined;
                    } & Record<Exclude<keyof I["getResponses"][number]["lens"]["content"]["preview"], keyof import("./lens").Preview>, never>) | undefined;
                    assetManifest?: ({
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    }[] & ({
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    } & {
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    } & Record<Exclude<keyof I["getResponses"][number]["lens"]["content"]["assetManifest"][number], keyof import("./lens").LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I["getResponses"][number]["lens"]["content"]["assetManifest"], keyof {
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    }[]>, never>) | undefined;
                    defaultHintId?: string | undefined;
                    hintTranslations?: ({
                        [x: string]: string | undefined;
                    } & {
                        [x: string]: string | undefined;
                    } & Record<Exclude<keyof I["getResponses"][number]["lens"]["content"]["hintTranslations"], string | number>, never>) | undefined;
                    lnsUrlBolt?: string | undefined;
                    iconUrlBolt?: string | undefined;
                } & Record<Exclude<keyof I["getResponses"][number]["lens"]["content"], keyof import("./lens").Content>, never>) | undefined;
                isThirdParty?: boolean | undefined;
                cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                featureMetadata?: ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] & ({
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                } & Record<Exclude<keyof I["getResponses"][number]["lens"]["featureMetadata"][number], keyof Any>, never>)[] & Record<Exclude<keyof I["getResponses"][number]["lens"]["featureMetadata"], keyof {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[]>, never>) | undefined;
                lensCreator?: ({
                    displayName?: string | undefined;
                } & {
                    displayName?: string | undefined;
                } & Record<Exclude<keyof I["getResponses"][number]["lens"]["lensCreator"], "displayName">, never>) | undefined;
                scannable?: ({
                    snapcodeImageUrl?: string | undefined;
                    snapcodeDeeplink?: string | undefined;
                } & {
                    snapcodeImageUrl?: string | undefined;
                    snapcodeDeeplink?: string | undefined;
                } & Record<Exclude<keyof I["getResponses"][number]["lens"]["scannable"], keyof import("./lens").Scannable>, never>) | undefined;
            } & Record<Exclude<keyof I["getResponses"][number]["lens"], keyof Lens>, never>) | undefined;
            groupId?: string | undefined;
        } & Record<Exclude<keyof I["getResponses"][number], keyof GetGroupLensResponse>, never>)[] & Record<Exclude<keyof I["getResponses"], keyof {
            lens?: {
                id?: string | undefined;
                name?: string | undefined;
                vendorData?: {
                    [x: string]: string | undefined;
                } | undefined;
                content?: {
                    lnsUrl?: string | undefined;
                    lnsSha256?: string | undefined;
                    iconUrl?: string | undefined;
                    preview?: {
                        imageUrl?: string | undefined;
                        imageSequenceSize?: number | undefined;
                        imageSequenceWebpUrlPattern?: string | undefined;
                    } | undefined;
                    assetManifest?: {
                        type?: import("./lens").LensAssetManifestItem_Type | undefined;
                        id?: string | undefined;
                        requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                        assetUrl?: string | undefined;
                        assetChecksum?: string | undefined;
                    }[] | undefined;
                    defaultHintId?: string | undefined;
                    hintTranslations?: {
                        [x: string]: string | undefined;
                    } | undefined;
                    lnsUrlBolt?: string | undefined;
                    iconUrlBolt?: string | undefined;
                } | undefined;
                isThirdParty?: boolean | undefined;
                cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                featureMetadata?: {
                    typeUrl?: string | undefined;
                    value?: Uint8Array | undefined;
                }[] | undefined;
                lensCreator?: {
                    displayName?: string | undefined;
                } | undefined;
                scannable?: {
                    snapcodeImageUrl?: string | undefined;
                    snapcodeDeeplink?: string | undefined;
                } | undefined;
            } | undefined;
            groupId?: string | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, "getResponses">, never>>(object: I): BatchGetGroupLensResponse;
};
export declare const GetPlaceholderConfigRequest: {
    encode(_: GetPlaceholderConfigRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigRequest;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetPlaceholderConfigRequest;
};
export declare const GetPlaceholderConfigResponse: {
    encode(message: GetPlaceholderConfigResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse;
    fromPartial<I extends {
        configs?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        configs?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & Record<Exclude<keyof I["configs"], string | number>, never>) | undefined;
    } & Record<Exclude<keyof I, "configs">, never>>(object: I): GetPlaceholderConfigResponse;
};
export declare const GetPlaceholderConfigResponse_ConfigsEntry: {
    encode(message: GetPlaceholderConfigResponse_ConfigsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse_ConfigsEntry;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & Record<Exclude<keyof I, keyof GetPlaceholderConfigResponse_ConfigsEntry>, never>>(object: I): GetPlaceholderConfigResponse_ConfigsEntry;
};
export declare const GetInitializationConfigRequest: {
    encode(_: GetInitializationConfigRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetInitializationConfigRequest;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): GetInitializationConfigRequest;
};
export declare const GetInitializationConfigResponse: {
    encode(message: GetInitializationConfigResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetInitializationConfigResponse;
    fromPartial<I extends {
        appVendorUuidOptIn?: boolean | undefined;
        watermarkEnabled?: boolean | undefined;
        childrenProtectionActRestricted?: boolean | undefined;
        legalPrompt?: {
            documents?: {
                type?: import("./legal_prompt").LegalDocument_Type | undefined;
                webUrl?: string | undefined;
                version?: string | undefined;
                timestamp?: Date | undefined;
            }[] | undefined;
            disabled?: boolean | undefined;
        } | undefined;
    } & {
        appVendorUuidOptIn?: boolean | undefined;
        watermarkEnabled?: boolean | undefined;
        childrenProtectionActRestricted?: boolean | undefined;
        legalPrompt?: ({
            documents?: {
                type?: import("./legal_prompt").LegalDocument_Type | undefined;
                webUrl?: string | undefined;
                version?: string | undefined;
                timestamp?: Date | undefined;
            }[] | undefined;
            disabled?: boolean | undefined;
        } & {
            documents?: ({
                type?: import("./legal_prompt").LegalDocument_Type | undefined;
                webUrl?: string | undefined;
                version?: string | undefined;
                timestamp?: Date | undefined;
            }[] & ({
                type?: import("./legal_prompt").LegalDocument_Type | undefined;
                webUrl?: string | undefined;
                version?: string | undefined;
                timestamp?: Date | undefined;
            } & {
                type?: import("./legal_prompt").LegalDocument_Type | undefined;
                webUrl?: string | undefined;
                version?: string | undefined;
                timestamp?: Date | undefined;
            } & Record<Exclude<keyof I["legalPrompt"]["documents"][number], keyof import("./legal_prompt").LegalDocument>, never>)[] & Record<Exclude<keyof I["legalPrompt"]["documents"], keyof {
                type?: import("./legal_prompt").LegalDocument_Type | undefined;
                webUrl?: string | undefined;
                version?: string | undefined;
                timestamp?: Date | undefined;
            }[]>, never>) | undefined;
            disabled?: boolean | undefined;
        } & Record<Exclude<keyof I["legalPrompt"], keyof LegalPrompt>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof GetInitializationConfigResponse>, never>>(object: I): GetInitializationConfigResponse;
};
export declare const SetOperationalMetricsRequest: {
    encode(message: SetOperationalMetricsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetOperationalMetricsRequest;
    fromPartial<I extends {
        metrics?: {
            metrics?: {
                name?: string | undefined;
                timestamp?: Date | undefined;
                metric?: ({
                    count?: string | undefined;
                } & {
                    $case: "count";
                }) | ({
                    latencyMillis?: string | undefined;
                } & {
                    $case: "latencyMillis";
                }) | ({
                    histogram?: string | undefined;
                } & {
                    $case: "histogram";
                }) | undefined;
            }[] | undefined;
        } | undefined;
    } & {
        metrics?: ({
            metrics?: {
                name?: string | undefined;
                timestamp?: Date | undefined;
                metric?: ({
                    count?: string | undefined;
                } & {
                    $case: "count";
                }) | ({
                    latencyMillis?: string | undefined;
                } & {
                    $case: "latencyMillis";
                }) | ({
                    histogram?: string | undefined;
                } & {
                    $case: "histogram";
                }) | undefined;
            }[] | undefined;
        } & {
            metrics?: ({
                name?: string | undefined;
                timestamp?: Date | undefined;
                metric?: ({
                    count?: string | undefined;
                } & {
                    $case: "count";
                }) | ({
                    latencyMillis?: string | undefined;
                } & {
                    $case: "latencyMillis";
                }) | ({
                    histogram?: string | undefined;
                } & {
                    $case: "histogram";
                }) | undefined;
            }[] & ({
                name?: string | undefined;
                timestamp?: Date | undefined;
                metric?: ({
                    count?: string | undefined;
                } & {
                    $case: "count";
                }) | ({
                    latencyMillis?: string | undefined;
                } & {
                    $case: "latencyMillis";
                }) | ({
                    histogram?: string | undefined;
                } & {
                    $case: "histogram";
                }) | undefined;
            } & {
                name?: string | undefined;
                timestamp?: Date | undefined;
                metric?: ({
                    count?: string | undefined;
                } & {
                    $case: "count";
                } & {
                    count?: string | undefined;
                    $case: "count";
                } & Record<Exclude<keyof I["metrics"]["metrics"][number]["metric"], "$case" | "count">, never>) | ({
                    latencyMillis?: string | undefined;
                } & {
                    $case: "latencyMillis";
                } & {
                    latencyMillis?: string | undefined;
                    $case: "latencyMillis";
                } & Record<Exclude<keyof I["metrics"]["metrics"][number]["metric"], "$case" | "latencyMillis">, never>) | ({
                    histogram?: string | undefined;
                } & {
                    $case: "histogram";
                } & {
                    histogram?: string | undefined;
                    $case: "histogram";
                } & Record<Exclude<keyof I["metrics"]["metrics"][number]["metric"], "$case" | "histogram">, never>) | undefined;
            } & Record<Exclude<keyof I["metrics"]["metrics"][number], keyof import("./operational_metrics").OperationalMetric>, never>)[] & Record<Exclude<keyof I["metrics"]["metrics"], keyof {
                name?: string | undefined;
                timestamp?: Date | undefined;
                metric?: ({
                    count?: string | undefined;
                } & {
                    $case: "count";
                }) | ({
                    latencyMillis?: string | undefined;
                } & {
                    $case: "latencyMillis";
                }) | ({
                    histogram?: string | undefined;
                } & {
                    $case: "histogram";
                }) | undefined;
            }[]>, never>) | undefined;
        } & Record<Exclude<keyof I["metrics"], "metrics">, never>) | undefined;
    } & Record<Exclude<keyof I, "metrics">, never>>(object: I): SetOperationalMetricsRequest;
};
export declare const SetOperationalMetricsResponse: {
    encode(_: SetOperationalMetricsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetOperationalMetricsResponse;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetOperationalMetricsResponse;
};
export declare const SetBusinessEventsRequest: {
    encode(message: SetBusinessEventsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetBusinessEventsRequest;
    fromPartial<I extends {
        batchEvents?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } | undefined;
    } & {
        batchEvents?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["batchEvents"], keyof Any>, never>) | undefined;
    } & Record<Exclude<keyof I, "batchEvents">, never>>(object: I): SetBusinessEventsRequest;
};
export declare const SetBusinessEventsResponse: {
    encode(_: SetBusinessEventsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetBusinessEventsResponse;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetBusinessEventsResponse;
};
export declare const SetExtensionBusinessEventsRequest: {
    encode(message: SetExtensionBusinessEventsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetExtensionBusinessEventsRequest;
    fromPartial<I extends {
        events?: {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] | undefined;
        extensionEventBase?: {
            extensionName?: string | undefined;
            extensionVersion?: string | undefined;
            deviceCluster?: string | undefined;
            cameraKitVersion?: string | undefined;
            lensCoreVersion?: string | undefined;
            deviceModel?: string | undefined;
            cameraKitFlavor?: import("./business_events").CameraKitFlavor | undefined;
            appId?: string | undefined;
            deviceConnectivity?: import("./business_events").CameraKitConnectivityType | undefined;
            sessionId?: string | undefined;
            cameraKitEnvironment?: import("./business_events").CameraKitEnvironment | undefined;
        } | undefined;
    } & {
        events?: ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[] & ({
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        } & Record<Exclude<keyof I["events"][number], keyof Any>, never>)[] & Record<Exclude<keyof I["events"], keyof {
            typeUrl?: string | undefined;
            value?: Uint8Array | undefined;
        }[]>, never>) | undefined;
        extensionEventBase?: ({
            extensionName?: string | undefined;
            extensionVersion?: string | undefined;
            deviceCluster?: string | undefined;
            cameraKitVersion?: string | undefined;
            lensCoreVersion?: string | undefined;
            deviceModel?: string | undefined;
            cameraKitFlavor?: import("./business_events").CameraKitFlavor | undefined;
            appId?: string | undefined;
            deviceConnectivity?: import("./business_events").CameraKitConnectivityType | undefined;
            sessionId?: string | undefined;
            cameraKitEnvironment?: import("./business_events").CameraKitEnvironment | undefined;
        } & {
            extensionName?: string | undefined;
            extensionVersion?: string | undefined;
            deviceCluster?: string | undefined;
            cameraKitVersion?: string | undefined;
            lensCoreVersion?: string | undefined;
            deviceModel?: string | undefined;
            cameraKitFlavor?: import("./business_events").CameraKitFlavor | undefined;
            appId?: string | undefined;
            deviceConnectivity?: import("./business_events").CameraKitConnectivityType | undefined;
            sessionId?: string | undefined;
            cameraKitEnvironment?: import("./business_events").CameraKitEnvironment | undefined;
        } & Record<Exclude<keyof I["extensionEventBase"], keyof ExtensionEventBase>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof SetExtensionBusinessEventsRequest>, never>>(object: I): SetExtensionBusinessEventsRequest;
};
export declare const SetExtensionBusinessEventsResponse: {
    encode(_: SetExtensionBusinessEventsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SetExtensionBusinessEventsResponse;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): SetExtensionBusinessEventsResponse;
};
export declare const LensesDefinition: {
    readonly name: "Lenses";
    readonly fullName: "com.snap.camerakit.v3.Lenses";
    readonly methods: {
        readonly getGroup: {
            readonly name: "GetGroup";
            readonly requestType: {
                encode(message: GetGroupRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupRequest;
                fromPartial<I extends {
                    id?: string | undefined;
                    rankingData?: {
                        sessionId?: string | undefined;
                        locale?: string | undefined;
                        osType?: import("./ranking").RankingData_OSType | undefined;
                        connectivityType?: import("./ranking").RankingData_ConnectivityType | undefined;
                    } | undefined;
                } & {
                    id?: string | undefined;
                    rankingData?: ({
                        sessionId?: string | undefined;
                        locale?: string | undefined;
                        osType?: import("./ranking").RankingData_OSType | undefined;
                        connectivityType?: import("./ranking").RankingData_ConnectivityType | undefined;
                    } & {
                        sessionId?: string | undefined;
                        locale?: string | undefined;
                        osType?: import("./ranking").RankingData_OSType | undefined;
                        connectivityType?: import("./ranking").RankingData_ConnectivityType | undefined;
                    } & Record<Exclude<keyof I["rankingData"], keyof RankingData>, never>) | undefined;
                } & Record<Exclude<keyof I, keyof GetGroupRequest>, never>>(object: I): GetGroupRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: GetGroupResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupResponse;
                fromPartial<I_1 extends {
                    id?: string | undefined;
                    lenses?: {
                        id?: string | undefined;
                        name?: string | undefined;
                        vendorData?: {
                            [x: string]: string | undefined;
                        } | undefined;
                        content?: {
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } | undefined;
                            assetManifest?: {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } | undefined;
                        isThirdParty?: boolean | undefined;
                        cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                        featureMetadata?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        lensCreator?: {
                            displayName?: string | undefined;
                        } | undefined;
                        scannable?: {
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } | undefined;
                    }[] | undefined;
                } & {
                    id?: string | undefined;
                    lenses?: ({
                        id?: string | undefined;
                        name?: string | undefined;
                        vendorData?: {
                            [x: string]: string | undefined;
                        } | undefined;
                        content?: {
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } | undefined;
                            assetManifest?: {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } | undefined;
                        isThirdParty?: boolean | undefined;
                        cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                        featureMetadata?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        lensCreator?: {
                            displayName?: string | undefined;
                        } | undefined;
                        scannable?: {
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } | undefined;
                    }[] & ({
                        id?: string | undefined;
                        name?: string | undefined;
                        vendorData?: {
                            [x: string]: string | undefined;
                        } | undefined;
                        content?: {
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } | undefined;
                            assetManifest?: {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } | undefined;
                        isThirdParty?: boolean | undefined;
                        cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                        featureMetadata?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        lensCreator?: {
                            displayName?: string | undefined;
                        } | undefined;
                        scannable?: {
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } | undefined;
                    } & {
                        id?: string | undefined;
                        name?: string | undefined;
                        vendorData?: ({
                            [x: string]: string | undefined;
                        } & {
                            [x: string]: string | undefined;
                        } & Record<Exclude<keyof I_1["lenses"][number]["vendorData"], string | number>, never>) | undefined;
                        content?: ({
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } | undefined;
                            assetManifest?: {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } & {
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: ({
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } & {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } & Record<Exclude<keyof I_1["lenses"][number]["content"]["preview"], keyof import("./lens").Preview>, never>) | undefined;
                            assetManifest?: ({
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] & ({
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            } & {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            } & Record<Exclude<keyof I_1["lenses"][number]["content"]["assetManifest"][number], keyof import("./lens").LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I_1["lenses"][number]["content"]["assetManifest"], keyof {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[]>, never>) | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: ({
                                [x: string]: string | undefined;
                            } & {
                                [x: string]: string | undefined;
                            } & Record<Exclude<keyof I_1["lenses"][number]["content"]["hintTranslations"], string | number>, never>) | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } & Record<Exclude<keyof I_1["lenses"][number]["content"], keyof import("./lens").Content>, never>) | undefined;
                        isThirdParty?: boolean | undefined;
                        cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                        featureMetadata?: ({
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[] & ({
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I_1["lenses"][number]["featureMetadata"][number], keyof Any>, never>)[] & Record<Exclude<keyof I_1["lenses"][number]["featureMetadata"], keyof {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[]>, never>) | undefined;
                        lensCreator?: ({
                            displayName?: string | undefined;
                        } & {
                            displayName?: string | undefined;
                        } & Record<Exclude<keyof I_1["lenses"][number]["lensCreator"], "displayName">, never>) | undefined;
                        scannable?: ({
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } & {
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } & Record<Exclude<keyof I_1["lenses"][number]["scannable"], keyof import("./lens").Scannable>, never>) | undefined;
                    } & Record<Exclude<keyof I_1["lenses"][number], keyof Lens>, never>)[] & Record<Exclude<keyof I_1["lenses"], keyof {
                        id?: string | undefined;
                        name?: string | undefined;
                        vendorData?: {
                            [x: string]: string | undefined;
                        } | undefined;
                        content?: {
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } | undefined;
                            assetManifest?: {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } | undefined;
                        isThirdParty?: boolean | undefined;
                        cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                        featureMetadata?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        lensCreator?: {
                            displayName?: string | undefined;
                        } | undefined;
                        scannable?: {
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I_1, keyof GetGroupResponse>, never>>(object: I_1): GetGroupResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly idempotencyLevel: "NO_SIDE_EFFECTS";
            };
        };
        readonly getGroupLens: {
            readonly name: "GetGroupLens";
            readonly requestType: {
                encode(message: GetGroupLensRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupLensRequest;
                fromPartial<I_2 extends {
                    lensId?: string | undefined;
                    groupId?: string | undefined;
                } & {
                    lensId?: string | undefined;
                    groupId?: string | undefined;
                } & Record<Exclude<keyof I_2, keyof GetGroupLensRequest>, never>>(object: I_2): GetGroupLensRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: GetGroupLensResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetGroupLensResponse;
                fromPartial<I_3 extends {
                    lens?: {
                        id?: string | undefined;
                        name?: string | undefined;
                        vendorData?: {
                            [x: string]: string | undefined;
                        } | undefined;
                        content?: {
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } | undefined;
                            assetManifest?: {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } | undefined;
                        isThirdParty?: boolean | undefined;
                        cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                        featureMetadata?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        lensCreator?: {
                            displayName?: string | undefined;
                        } | undefined;
                        scannable?: {
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } | undefined;
                    } | undefined;
                    groupId?: string | undefined;
                } & {
                    lens?: ({
                        id?: string | undefined;
                        name?: string | undefined;
                        vendorData?: {
                            [x: string]: string | undefined;
                        } | undefined;
                        content?: {
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } | undefined;
                            assetManifest?: {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } | undefined;
                        isThirdParty?: boolean | undefined;
                        cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                        featureMetadata?: {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        lensCreator?: {
                            displayName?: string | undefined;
                        } | undefined;
                        scannable?: {
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } | undefined;
                    } & {
                        id?: string | undefined;
                        name?: string | undefined;
                        vendorData?: ({
                            [x: string]: string | undefined;
                        } & {
                            [x: string]: string | undefined;
                        } & Record<Exclude<keyof I_3["lens"]["vendorData"], string | number>, never>) | undefined;
                        content?: ({
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } | undefined;
                            assetManifest?: {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } & {
                            lnsUrl?: string | undefined;
                            lnsSha256?: string | undefined;
                            iconUrl?: string | undefined;
                            preview?: ({
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } & {
                                imageUrl?: string | undefined;
                                imageSequenceSize?: number | undefined;
                                imageSequenceWebpUrlPattern?: string | undefined;
                            } & Record<Exclude<keyof I_3["lens"]["content"]["preview"], keyof import("./lens").Preview>, never>) | undefined;
                            assetManifest?: ({
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[] & ({
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            } & {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            } & Record<Exclude<keyof I_3["lens"]["content"]["assetManifest"][number], keyof import("./lens").LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I_3["lens"]["content"]["assetManifest"], keyof {
                                type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                id?: string | undefined;
                                requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                assetUrl?: string | undefined;
                                assetChecksum?: string | undefined;
                            }[]>, never>) | undefined;
                            defaultHintId?: string | undefined;
                            hintTranslations?: ({
                                [x: string]: string | undefined;
                            } & {
                                [x: string]: string | undefined;
                            } & Record<Exclude<keyof I_3["lens"]["content"]["hintTranslations"], string | number>, never>) | undefined;
                            lnsUrlBolt?: string | undefined;
                            iconUrlBolt?: string | undefined;
                        } & Record<Exclude<keyof I_3["lens"]["content"], keyof import("./lens").Content>, never>) | undefined;
                        isThirdParty?: boolean | undefined;
                        cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                        featureMetadata?: ({
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[] & ({
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        } & Record<Exclude<keyof I_3["lens"]["featureMetadata"][number], keyof Any>, never>)[] & Record<Exclude<keyof I_3["lens"]["featureMetadata"], keyof {
                            typeUrl?: string | undefined;
                            value?: Uint8Array | undefined;
                        }[]>, never>) | undefined;
                        lensCreator?: ({
                            displayName?: string | undefined;
                        } & {
                            displayName?: string | undefined;
                        } & Record<Exclude<keyof I_3["lens"]["lensCreator"], "displayName">, never>) | undefined;
                        scannable?: ({
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } & {
                            snapcodeImageUrl?: string | undefined;
                            snapcodeDeeplink?: string | undefined;
                        } & Record<Exclude<keyof I_3["lens"]["scannable"], keyof import("./lens").Scannable>, never>) | undefined;
                    } & Record<Exclude<keyof I_3["lens"], keyof Lens>, never>) | undefined;
                    groupId?: string | undefined;
                } & Record<Exclude<keyof I_3, keyof GetGroupLensResponse>, never>>(object: I_3): GetGroupLensResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly idempotencyLevel: "NO_SIDE_EFFECTS";
            };
        };
        readonly batchGetGroupLens: {
            readonly name: "BatchGetGroupLens";
            readonly requestType: {
                encode(message: BatchGetGroupLensRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BatchGetGroupLensRequest;
                fromPartial<I_4 extends {
                    getRequests?: {
                        lensId?: string | undefined;
                        groupId?: string | undefined;
                    }[] | undefined;
                } & {
                    getRequests?: ({
                        lensId?: string | undefined;
                        groupId?: string | undefined;
                    }[] & ({
                        lensId?: string | undefined;
                        groupId?: string | undefined;
                    } & {
                        lensId?: string | undefined;
                        groupId?: string | undefined;
                    } & Record<Exclude<keyof I["getRequests"][number], keyof GetGroupLensRequest>, never>)[] & Record<Exclude<keyof I["getRequests"], keyof {
                        lensId?: string | undefined;
                        groupId?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I_4, "getRequests">, never>>(object: I_4): BatchGetGroupLensRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: BatchGetGroupLensResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): BatchGetGroupLensResponse;
                fromPartial<I_5 extends {
                    getResponses?: {
                        lens?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            vendorData?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            content?: {
                                lnsUrl?: string | undefined;
                                lnsSha256?: string | undefined;
                                iconUrl?: string | undefined;
                                preview?: {
                                    imageUrl?: string | undefined;
                                    imageSequenceSize?: number | undefined;
                                    imageSequenceWebpUrlPattern?: string | undefined;
                                } | undefined;
                                assetManifest?: {
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                }[] | undefined;
                                defaultHintId?: string | undefined;
                                hintTranslations?: {
                                    [x: string]: string | undefined;
                                } | undefined;
                                lnsUrlBolt?: string | undefined;
                                iconUrlBolt?: string | undefined;
                            } | undefined;
                            isThirdParty?: boolean | undefined;
                            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                            featureMetadata?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                            lensCreator?: {
                                displayName?: string | undefined;
                            } | undefined;
                            scannable?: {
                                snapcodeImageUrl?: string | undefined;
                                snapcodeDeeplink?: string | undefined;
                            } | undefined;
                        } | undefined;
                        groupId?: string | undefined;
                    }[] | undefined;
                } & {
                    getResponses?: ({
                        lens?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            vendorData?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            content?: {
                                lnsUrl?: string | undefined;
                                lnsSha256?: string | undefined;
                                iconUrl?: string | undefined;
                                preview?: {
                                    imageUrl?: string | undefined;
                                    imageSequenceSize?: number | undefined;
                                    imageSequenceWebpUrlPattern?: string | undefined;
                                } | undefined;
                                assetManifest?: {
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                }[] | undefined;
                                defaultHintId?: string | undefined;
                                hintTranslations?: {
                                    [x: string]: string | undefined;
                                } | undefined;
                                lnsUrlBolt?: string | undefined;
                                iconUrlBolt?: string | undefined;
                            } | undefined;
                            isThirdParty?: boolean | undefined;
                            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                            featureMetadata?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                            lensCreator?: {
                                displayName?: string | undefined;
                            } | undefined;
                            scannable?: {
                                snapcodeImageUrl?: string | undefined;
                                snapcodeDeeplink?: string | undefined;
                            } | undefined;
                        } | undefined;
                        groupId?: string | undefined;
                    }[] & ({
                        lens?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            vendorData?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            content?: {
                                lnsUrl?: string | undefined;
                                lnsSha256?: string | undefined;
                                iconUrl?: string | undefined;
                                preview?: {
                                    imageUrl?: string | undefined;
                                    imageSequenceSize?: number | undefined;
                                    imageSequenceWebpUrlPattern?: string | undefined;
                                } | undefined;
                                assetManifest?: {
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                }[] | undefined;
                                defaultHintId?: string | undefined;
                                hintTranslations?: {
                                    [x: string]: string | undefined;
                                } | undefined;
                                lnsUrlBolt?: string | undefined;
                                iconUrlBolt?: string | undefined;
                            } | undefined;
                            isThirdParty?: boolean | undefined;
                            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                            featureMetadata?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                            lensCreator?: {
                                displayName?: string | undefined;
                            } | undefined;
                            scannable?: {
                                snapcodeImageUrl?: string | undefined;
                                snapcodeDeeplink?: string | undefined;
                            } | undefined;
                        } | undefined;
                        groupId?: string | undefined;
                    } & {
                        lens?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            vendorData?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            content?: {
                                lnsUrl?: string | undefined;
                                lnsSha256?: string | undefined;
                                iconUrl?: string | undefined;
                                preview?: {
                                    imageUrl?: string | undefined;
                                    imageSequenceSize?: number | undefined;
                                    imageSequenceWebpUrlPattern?: string | undefined;
                                } | undefined;
                                assetManifest?: {
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                }[] | undefined;
                                defaultHintId?: string | undefined;
                                hintTranslations?: {
                                    [x: string]: string | undefined;
                                } | undefined;
                                lnsUrlBolt?: string | undefined;
                                iconUrlBolt?: string | undefined;
                            } | undefined;
                            isThirdParty?: boolean | undefined;
                            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                            featureMetadata?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                            lensCreator?: {
                                displayName?: string | undefined;
                            } | undefined;
                            scannable?: {
                                snapcodeImageUrl?: string | undefined;
                                snapcodeDeeplink?: string | undefined;
                            } | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            vendorData?: ({
                                [x: string]: string | undefined;
                            } & {
                                [x: string]: string | undefined;
                            } & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["vendorData"], string | number>, never>) | undefined;
                            content?: ({
                                lnsUrl?: string | undefined;
                                lnsSha256?: string | undefined;
                                iconUrl?: string | undefined;
                                preview?: {
                                    imageUrl?: string | undefined;
                                    imageSequenceSize?: number | undefined;
                                    imageSequenceWebpUrlPattern?: string | undefined;
                                } | undefined;
                                assetManifest?: {
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                }[] | undefined;
                                defaultHintId?: string | undefined;
                                hintTranslations?: {
                                    [x: string]: string | undefined;
                                } | undefined;
                                lnsUrlBolt?: string | undefined;
                                iconUrlBolt?: string | undefined;
                            } & {
                                lnsUrl?: string | undefined;
                                lnsSha256?: string | undefined;
                                iconUrl?: string | undefined;
                                preview?: ({
                                    imageUrl?: string | undefined;
                                    imageSequenceSize?: number | undefined;
                                    imageSequenceWebpUrlPattern?: string | undefined;
                                } & {
                                    imageUrl?: string | undefined;
                                    imageSequenceSize?: number | undefined;
                                    imageSequenceWebpUrlPattern?: string | undefined;
                                } & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["content"]["preview"], keyof import("./lens").Preview>, never>) | undefined;
                                assetManifest?: ({
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                }[] & ({
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                } & {
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                } & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["content"]["assetManifest"][number], keyof import("./lens").LensAssetManifestItem>, never>)[] & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["content"]["assetManifest"], keyof {
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                }[]>, never>) | undefined;
                                defaultHintId?: string | undefined;
                                hintTranslations?: ({
                                    [x: string]: string | undefined;
                                } & {
                                    [x: string]: string | undefined;
                                } & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["content"]["hintTranslations"], string | number>, never>) | undefined;
                                lnsUrlBolt?: string | undefined;
                                iconUrlBolt?: string | undefined;
                            } & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["content"], keyof import("./lens").Content>, never>) | undefined;
                            isThirdParty?: boolean | undefined;
                            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                            featureMetadata?: ({
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            }[] & ({
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } & {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            } & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["featureMetadata"][number], keyof Any>, never>)[] & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["featureMetadata"], keyof {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            }[]>, never>) | undefined;
                            lensCreator?: ({
                                displayName?: string | undefined;
                            } & {
                                displayName?: string | undefined;
                            } & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["lensCreator"], "displayName">, never>) | undefined;
                            scannable?: ({
                                snapcodeImageUrl?: string | undefined;
                                snapcodeDeeplink?: string | undefined;
                            } & {
                                snapcodeImageUrl?: string | undefined;
                                snapcodeDeeplink?: string | undefined;
                            } & Record<Exclude<keyof I_5["getResponses"][number]["lens"]["scannable"], keyof import("./lens").Scannable>, never>) | undefined;
                        } & Record<Exclude<keyof I_5["getResponses"][number]["lens"], keyof Lens>, never>) | undefined;
                        groupId?: string | undefined;
                    } & Record<Exclude<keyof I_5["getResponses"][number], keyof GetGroupLensResponse>, never>)[] & Record<Exclude<keyof I_5["getResponses"], keyof {
                        lens?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            vendorData?: {
                                [x: string]: string | undefined;
                            } | undefined;
                            content?: {
                                lnsUrl?: string | undefined;
                                lnsSha256?: string | undefined;
                                iconUrl?: string | undefined;
                                preview?: {
                                    imageUrl?: string | undefined;
                                    imageSequenceSize?: number | undefined;
                                    imageSequenceWebpUrlPattern?: string | undefined;
                                } | undefined;
                                assetManifest?: {
                                    type?: import("./lens").LensAssetManifestItem_Type | undefined;
                                    id?: string | undefined;
                                    requestTiming?: import("./lens").LensAssetManifestItem_RequestTiming | undefined;
                                    assetUrl?: string | undefined;
                                    assetChecksum?: string | undefined;
                                }[] | undefined;
                                defaultHintId?: string | undefined;
                                hintTranslations?: {
                                    [x: string]: string | undefined;
                                } | undefined;
                                lnsUrlBolt?: string | undefined;
                                iconUrlBolt?: string | undefined;
                            } | undefined;
                            isThirdParty?: boolean | undefined;
                            cameraFacingPreference?: import("./lens").Lens_CameraFacing | undefined;
                            featureMetadata?: {
                                typeUrl?: string | undefined;
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                            lensCreator?: {
                                displayName?: string | undefined;
                            } | undefined;
                            scannable?: {
                                snapcodeImageUrl?: string | undefined;
                                snapcodeDeeplink?: string | undefined;
                            } | undefined;
                        } | undefined;
                        groupId?: string | undefined;
                    }[]>, never>) | undefined;
                } & Record<Exclude<keyof I_5, "getResponses">, never>>(object: I_5): BatchGetGroupLensResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly idempotencyLevel: "NO_SIDE_EFFECTS";
            };
        };
        readonly getPlaceholderConfig: {
            readonly name: "GetPlaceholderConfig";
            readonly requestType: {
                encode(_: GetPlaceholderConfigRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigRequest;
                fromPartial<I_6 extends {} & {} & Record<Exclude<keyof I_6, never>, never>>(_: I_6): GetPlaceholderConfigRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: GetPlaceholderConfigResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetPlaceholderConfigResponse;
                fromPartial<I_7 extends {
                    configs?: {
                        [x: string]: string | undefined;
                    } | undefined;
                } & {
                    configs?: ({
                        [x: string]: string | undefined;
                    } & {
                        [x: string]: string | undefined;
                    } & Record<Exclude<keyof I["configs"], string | number>, never>) | undefined;
                } & Record<Exclude<keyof I_7, "configs">, never>>(object: I_7): GetPlaceholderConfigResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly idempotencyLevel: "NO_SIDE_EFFECTS";
            };
        };
    };
};
export declare const MetricsDefinition: {
    readonly name: "Metrics";
    readonly fullName: "com.snap.camerakit.v3.Metrics";
    readonly methods: {
        readonly setOperationalMetrics: {
            readonly name: "SetOperationalMetrics";
            readonly requestType: {
                encode(message: SetOperationalMetricsRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SetOperationalMetricsRequest;
                fromPartial<I extends {
                    metrics?: {
                        metrics?: {
                            name?: string | undefined;
                            timestamp?: Date | undefined;
                            metric?: ({
                                count?: string | undefined;
                            } & {
                                $case: "count";
                            }) | ({
                                latencyMillis?: string | undefined;
                            } & {
                                $case: "latencyMillis";
                            }) | ({
                                histogram?: string | undefined;
                            } & {
                                $case: "histogram";
                            }) | undefined;
                        }[] | undefined;
                    } | undefined;
                } & {
                    metrics?: ({
                        metrics?: {
                            name?: string | undefined;
                            timestamp?: Date | undefined;
                            metric?: ({
                                count?: string | undefined;
                            } & {
                                $case: "count";
                            }) | ({
                                latencyMillis?: string | undefined;
                            } & {
                                $case: "latencyMillis";
                            }) | ({
                                histogram?: string | undefined;
                            } & {
                                $case: "histogram";
                            }) | undefined;
                        }[] | undefined;
                    } & {
                        metrics?: ({
                            name?: string | undefined;
                            timestamp?: Date | undefined;
                            metric?: ({
                                count?: string | undefined;
                            } & {
                                $case: "count";
                            }) | ({
                                latencyMillis?: string | undefined;
                            } & {
                                $case: "latencyMillis";
                            }) | ({
                                histogram?: string | undefined;
                            } & {
                                $case: "histogram";
                            }) | undefined;
                        }[] & ({
                            name?: string | undefined;
                            timestamp?: Date | undefined;
                            metric?: ({
                                count?: string | undefined;
                            } & {
                                $case: "count";
                            }) | ({
                                latencyMillis?: string | undefined;
                            } & {
                                $case: "latencyMillis";
                            }) | ({
                                histogram?: string | undefined;
                            } & {
                                $case: "histogram";
                            }) | undefined;
                        } & {
                            name?: string | undefined;
                            timestamp?: Date | undefined;
                            metric?: ({
                                count?: string | undefined;
                            } & {
                                $case: "count";
                            } & {
                                count?: string | undefined;
                                $case: "count";
                            } & Record<Exclude<keyof I["metrics"]["metrics"][number]["metric"], "$case" | "count">, never>) | ({
                                latencyMillis?: string | undefined;
                            } & {
                                $case: "latencyMillis";
                            } & {
                                latencyMillis?: string | undefined;
                                $case: "latencyMillis";
                            } & Record<Exclude<keyof I["metrics"]["metrics"][number]["metric"], "$case" | "latencyMillis">, never>) | ({
                                histogram?: string | undefined;
                            } & {
                                $case: "histogram";
                            } & {
                                histogram?: string | undefined;
                                $case: "histogram";
                            } & Record<Exclude<keyof I["metrics"]["metrics"][number]["metric"], "$case" | "histogram">, never>) | undefined;
                        } & Record<Exclude<keyof I["metrics"]["metrics"][number], keyof import("./operational_metrics").OperationalMetric>, never>)[] & Record<Exclude<keyof I["metrics"]["metrics"], keyof {
                            name?: string | undefined;
                            timestamp?: Date | undefined;
                            metric?: ({
                                count?: string | undefined;
                            } & {
                                $case: "count";
                            }) | ({
                                latencyMillis?: string | undefined;
                            } & {
                                $case: "latencyMillis";
                            }) | ({
                                histogram?: string | undefined;
                            } & {
                                $case: "histogram";
                            }) | undefined;
                        }[]>, never>) | undefined;
                    } & Record<Exclude<keyof I["metrics"], "metrics">, never>) | undefined;
                } & Record<Exclude<keyof I, "metrics">, never>>(object: I): SetOperationalMetricsRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(_: SetOperationalMetricsResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SetOperationalMetricsResponse;
                fromPartial<I_1 extends {} & {} & Record<Exclude<keyof I_1, never>, never>>(_: I_1): SetOperationalMetricsResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly setBusinessEvents: {
            readonly name: "SetBusinessEvents";
            readonly requestType: {
                encode(message: SetBusinessEventsRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SetBusinessEventsRequest;
                fromPartial<I_2 extends {
                    batchEvents?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } | undefined;
                } & {
                    batchEvents?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I["batchEvents"], keyof Any>, never>) | undefined;
                } & Record<Exclude<keyof I_2, "batchEvents">, never>>(object: I_2): SetBusinessEventsRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(_: SetBusinessEventsResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SetBusinessEventsResponse;
                fromPartial<I_3 extends {} & {} & Record<Exclude<keyof I_3, never>, never>>(_: I_3): SetBusinessEventsResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly setExtensionBusinessEvents: {
            readonly name: "SetExtensionBusinessEvents";
            readonly requestType: {
                encode(message: SetExtensionBusinessEventsRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SetExtensionBusinessEventsRequest;
                fromPartial<I_4 extends {
                    events?: {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    extensionEventBase?: {
                        extensionName?: string | undefined;
                        extensionVersion?: string | undefined;
                        deviceCluster?: string | undefined;
                        cameraKitVersion?: string | undefined;
                        lensCoreVersion?: string | undefined;
                        deviceModel?: string | undefined;
                        cameraKitFlavor?: import("./business_events").CameraKitFlavor | undefined;
                        appId?: string | undefined;
                        deviceConnectivity?: import("./business_events").CameraKitConnectivityType | undefined;
                        sessionId?: string | undefined;
                        cameraKitEnvironment?: import("./business_events").CameraKitEnvironment | undefined;
                    } | undefined;
                } & {
                    events?: ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[] & ({
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    } & Record<Exclude<keyof I_4["events"][number], keyof Any>, never>)[] & Record<Exclude<keyof I_4["events"], keyof {
                        typeUrl?: string | undefined;
                        value?: Uint8Array | undefined;
                    }[]>, never>) | undefined;
                    extensionEventBase?: ({
                        extensionName?: string | undefined;
                        extensionVersion?: string | undefined;
                        deviceCluster?: string | undefined;
                        cameraKitVersion?: string | undefined;
                        lensCoreVersion?: string | undefined;
                        deviceModel?: string | undefined;
                        cameraKitFlavor?: import("./business_events").CameraKitFlavor | undefined;
                        appId?: string | undefined;
                        deviceConnectivity?: import("./business_events").CameraKitConnectivityType | undefined;
                        sessionId?: string | undefined;
                        cameraKitEnvironment?: import("./business_events").CameraKitEnvironment | undefined;
                    } & {
                        extensionName?: string | undefined;
                        extensionVersion?: string | undefined;
                        deviceCluster?: string | undefined;
                        cameraKitVersion?: string | undefined;
                        lensCoreVersion?: string | undefined;
                        deviceModel?: string | undefined;
                        cameraKitFlavor?: import("./business_events").CameraKitFlavor | undefined;
                        appId?: string | undefined;
                        deviceConnectivity?: import("./business_events").CameraKitConnectivityType | undefined;
                        sessionId?: string | undefined;
                        cameraKitEnvironment?: import("./business_events").CameraKitEnvironment | undefined;
                    } & Record<Exclude<keyof I_4["extensionEventBase"], keyof ExtensionEventBase>, never>) | undefined;
                } & Record<Exclude<keyof I_4, keyof SetExtensionBusinessEventsRequest>, never>>(object: I_4): SetExtensionBusinessEventsRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(_: SetExtensionBusinessEventsResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SetExtensionBusinessEventsResponse;
                fromPartial<I_5 extends {} & {} & Record<Exclude<keyof I_5, never>, never>>(_: I_5): SetExtensionBusinessEventsResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly getInitializationConfig: {
            readonly name: "GetInitializationConfig";
            readonly requestType: {
                encode(_: GetInitializationConfigRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetInitializationConfigRequest;
                fromPartial<I_6 extends {} & {} & Record<Exclude<keyof I_6, never>, never>>(_: I_6): GetInitializationConfigRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: GetInitializationConfigResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetInitializationConfigResponse;
                fromPartial<I_7 extends {
                    appVendorUuidOptIn?: boolean | undefined;
                    watermarkEnabled?: boolean | undefined;
                    childrenProtectionActRestricted?: boolean | undefined;
                    legalPrompt?: {
                        documents?: {
                            type?: import("./legal_prompt").LegalDocument_Type | undefined;
                            webUrl?: string | undefined;
                            version?: string | undefined;
                            timestamp?: Date | undefined;
                        }[] | undefined;
                        disabled?: boolean | undefined;
                    } | undefined;
                } & {
                    appVendorUuidOptIn?: boolean | undefined;
                    watermarkEnabled?: boolean | undefined;
                    childrenProtectionActRestricted?: boolean | undefined;
                    legalPrompt?: ({
                        documents?: {
                            type?: import("./legal_prompt").LegalDocument_Type | undefined;
                            webUrl?: string | undefined;
                            version?: string | undefined;
                            timestamp?: Date | undefined;
                        }[] | undefined;
                        disabled?: boolean | undefined;
                    } & {
                        documents?: ({
                            type?: import("./legal_prompt").LegalDocument_Type | undefined;
                            webUrl?: string | undefined;
                            version?: string | undefined;
                            timestamp?: Date | undefined;
                        }[] & ({
                            type?: import("./legal_prompt").LegalDocument_Type | undefined;
                            webUrl?: string | undefined;
                            version?: string | undefined;
                            timestamp?: Date | undefined;
                        } & {
                            type?: import("./legal_prompt").LegalDocument_Type | undefined;
                            webUrl?: string | undefined;
                            version?: string | undefined;
                            timestamp?: Date | undefined;
                        } & Record<Exclude<keyof I_7["legalPrompt"]["documents"][number], keyof import("./legal_prompt").LegalDocument>, never>)[] & Record<Exclude<keyof I_7["legalPrompt"]["documents"], keyof {
                            type?: import("./legal_prompt").LegalDocument_Type | undefined;
                            webUrl?: string | undefined;
                            version?: string | undefined;
                            timestamp?: Date | undefined;
                        }[]>, never>) | undefined;
                        disabled?: boolean | undefined;
                    } & Record<Exclude<keyof I_7["legalPrompt"], keyof LegalPrompt>, never>) | undefined;
                } & Record<Exclude<keyof I_7, keyof GetInitializationConfigResponse>, never>>(object: I_7): GetInitializationConfigResponse;
            };
            readonly responseStream: false;
            readonly options: {
                readonly idempotencyLevel: "NO_SIDE_EFFECTS";
            };
        };
    };
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {
    $case: string;
} ? {
    [K in keyof Omit<T, "$case">]?: DeepPartial<T[K]>;
} & {
    $case: T["$case"];
} : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
//# sourceMappingURL=service.d.ts.map