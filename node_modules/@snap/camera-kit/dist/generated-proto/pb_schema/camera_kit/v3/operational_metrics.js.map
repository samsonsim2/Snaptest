{"version":3,"file":"operational_metrics.js","sourceRoot":"","sources":["../../../../../src/generated-proto/pb_schema/camera_kit/v3/operational_metrics.ts"],"names":[],"mappings":"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","sourcesContent":["import Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nexport const protobufPackage = \"com.snap.camerakit.v3\";\nexport interface OperationalMetric {\n    name: string;\n    timestamp: Date | undefined;\n    metric?: {\n        $case: \"count\";\n        count: string;\n    } | {\n        $case: \"latencyMillis\";\n        latencyMillis: string;\n    } | {\n        $case: \"histogram\";\n        histogram: string;\n    };\n}\nexport interface OperationalMetricsBundle {\n    metrics: OperationalMetric[];\n}\nfunction createBaseOperationalMetric(): OperationalMetric {\n    return { name: \"\", timestamp: undefined, metric: undefined };\n}\nexport const OperationalMetric = {\n    encode(message: OperationalMetric, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.metric?.$case === \"count\") {\n            writer.uint32(24).uint64(message.metric.count);\n        }\n        if (message.metric?.$case === \"latencyMillis\") {\n            writer.uint32(32).uint64(message.metric.latencyMillis);\n        }\n        if (message.metric?.$case === \"histogram\") {\n            writer.uint32(40).int64(message.metric.histogram);\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): OperationalMetric {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOperationalMetric();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.metric = { $case: \"count\", count: longToString(reader.uint64() as Long) };\n                    break;\n                case 4:\n                    message.metric = { $case: \"latencyMillis\", latencyMillis: longToString(reader.uint64() as Long) };\n                    break;\n                case 5:\n                    message.metric = { $case: \"histogram\", histogram: longToString(reader.int64() as Long) };\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<OperationalMetric>, I>>(object: I): OperationalMetric {\n        const message = createBaseOperationalMetric();\n        message.name = object.name ?? \"\";\n        message.timestamp = object.timestamp ?? undefined;\n        if (object.metric?.$case === \"count\" && object.metric?.count !== undefined && object.metric?.count !== null) {\n            message.metric = { $case: \"count\", count: object.metric.count };\n        }\n        if (object.metric?.$case === \"latencyMillis\" &&\n            object.metric?.latencyMillis !== undefined &&\n            object.metric?.latencyMillis !== null) {\n            message.metric = { $case: \"latencyMillis\", latencyMillis: object.metric.latencyMillis };\n        }\n        if (object.metric?.$case === \"histogram\" &&\n            object.metric?.histogram !== undefined &&\n            object.metric?.histogram !== null) {\n            message.metric = { $case: \"histogram\", histogram: object.metric.histogram };\n        }\n        return message;\n    },\n};\nfunction createBaseOperationalMetricsBundle(): OperationalMetricsBundle {\n    return { metrics: [] };\n}\nexport const OperationalMetricsBundle = {\n    encode(message: OperationalMetricsBundle, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n        for (const v of message.metrics) {\n            OperationalMetric.encode(v!, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input: _m0.Reader | Uint8Array, length?: number): OperationalMetricsBundle {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOperationalMetricsBundle();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metrics.push(OperationalMetric.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromPartial<I extends Exact<DeepPartial<OperationalMetricsBundle>, I>>(object: I): OperationalMetricsBundle {\n        const message = createBaseOperationalMetricsBundle();\n        message.metrics = object.metrics?.map((e) => OperationalMetric.fromPartial(e)) || [];\n        return message;\n    },\n};\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\nexport type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {\n    $case: string;\n} ? {\n    [K in keyof Omit<T, \"$case\">]?: DeepPartial<T[K]>;\n} & {\n    $case: T[\"$case\"];\n} : T extends {} ? {\n    [K in keyof T]?: DeepPartial<T[K]>;\n} : Partial<T>;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin ? P : P & {\n    [K in keyof P]: Exact<P[K], I[K]>;\n} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;\nfunction toTimestamp(date: Date): Timestamp {\n    const seconds = Math.trunc(date.getTime() / 1000).toString();\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t: Timestamp): Date {\n    let millis = Number(t.seconds) * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction longToString(long: Long) {\n    return long.toString();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long as any;\n    _m0.configure();\n}\n"]}